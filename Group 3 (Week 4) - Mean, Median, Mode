from statistics import mean, median, mode

def calculate_mean(numbers):
    if not numbers:
        return 0
    return sum(numbers) / len(numbers)

def calculate_median(numbers):
    if not numbers:
        return 0
    sorted_numbers = sorted(numbers)
    n = len(sorted_numbers)
    mid = n // 2

    if n % 2 == 0:
        return (sorted_numbers[mid - 1] + sorted_numbers[mid]) / 2
    else:
        return sorted_numbers[mid]

def calculate_mode(numbers):
    if not numbers:
        return 0
    frequency = {}
    for num in numbers:
        frequency[num] = frequency.get(num, 0) + 1
    
    max_frequency = max(frequency.values())
    modes = [key for key, value in frequency.items() if value == max_frequency]
    
    return modes[0] if len(modes) == 1 else modes  # Return first mode if unique, otherwise list of modes

def main():
    test_list = [4, 2, 2, 3, 3, 4, 4, 5, 6]
    print("Test List: ", test_list)
    print("\nMean:", calculate_mean(test_list))
    print("Median:", calculate_median(test_list))
    print("Mode:", calculate_mode(test_list))

    # Test with empty list
    print("\nEmpty list test:")
    print("Mean:", calculate_mean([]))
    print("Median:", calculate_median([]))
    print("Mode:", calculate_mode([]))

if __name__ == "__main__":
    main()
